name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache node_modules and pnpm store
        uses: actions/cache@v4
        id: cache-modules
        with:
          path: |
            node_modules
            .pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Upload node_modules and pnpm store as artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: node-modules
          path: |
            node_modules
            .pnpm-store
          retention-days: 1

  quality:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Download dependencies artifact
        uses: actions/download-artifact@v4
        with:
          name: node-modules
          path: .

      - name: Run Prettier check
        run: pnpm run prettier:check

      - name: Run ESLint
        run: pnpm run lint:check

      - name: Run tests
        run: pnpm run test

      - name: Run type checking
        run: pnpm run types:check

  build:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Download dependencies artifact
        uses: actions/download-artifact@v4
        with:
          name: node-modules
          path: .

      - name: Build project
        run: pnpm run build

      - name: Upload dist as artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: dist
          path: dist
          retention-days: 7

  pages:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download built assets
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Prepare GitHub Pages
        run: |
          mkdir -p public
          cp -r dist/* public/

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public