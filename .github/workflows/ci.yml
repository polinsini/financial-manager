name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest-9 --activate
          pnpm config set store-dir .pnpm-store

      - name: Install dependencies
        run: pnpm install

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: .pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

  quality:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest-9 --activate
          pnpm config set store-dir .pnpm-store

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Prettier check
        run: pnpm run prettier:check

      - name: ESLint check
        run: pnpm run lint:check

      - name: Type check
        run: pnpm run types:check

      - name: Run tests
        run: pnpm run test

  build:
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest-9 --activate
          pnpm config set store-dir .pnpm-store

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm run build

      - name: Upload dist as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  deploy-pages:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: public

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
